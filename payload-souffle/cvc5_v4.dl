.in
# -------------------- edbs ------------------- 
.decl Arch_memory_access(AccessType:number,EA:number,DirectReg:number,BaseReg:number,IndexReg:number,Offset:number)
.input Arch_memory_access_truncate.csv # cut -f1-2,5-7,9 Arch_memory_access.csv > Arch_memory_access_truncate.csv

.decl Arch_reg_reg_arithmetic_operation(EA:number,Dst:number,Src1:number,Src2:number,Mult:number,Offset:number)
.input Arch_reg_reg_arithmetic_operation.csv

.decl Arch_return_reg(Reg:number)
.input Arch_return_reg.csv

.decl Block_next(Block:number,BlockEnd:number,NextBlock:number)
.input Block_next.csv

.decl Block_last_instruction(Block:number,EA:number)
.input Block_last_instruction.csv

.decl Code_in_block(EA:number,Block:number)
.input Code_in_block.csv

.decl Direct_call(EA:number,Dest:number)
.input Direct_call.csv

.decl May_fallthrough(o:number,d:number)
.input May_fallthrough.csv

.decl Reg_def_use_block_last_def(EA:number,EA_def:number,Var:number)
.input Reg_def_use_block_last_def.csv

.decl Reg_def_use_defined_in_block(Block:number,Var:number)
.input Reg_def_use_defined_in_block.csv

.decl Reg_def_use_flow_def(EA:number,Var:number,EA_next:number,Value:number)
.input Reg_def_use_flow_def.csv

.decl Reg_def_use_live_var_def(Block:number,VarIdentity:number,LiveVar:number,EA_def:number)
.input Reg_def_use_live_var_def.csv

.decl Reg_def_use_ref_in_block(Block:number,Var:number)
.input Reg_def_use_ref_in_block.csv

.decl Reg_def_use_return_block_end(Callee:number,CalleeEnd:number,Block:number,BlockEnd:number)
.input Reg_def_use_return_block_end.csv

.decl Reg_def_use_used(EA:number,Var:number,Index:number)
.input Reg_def_use_used.csv

.decl Reg_def_use_used_in_block(Block:number,EA_used:number,Var:number,Index:number)
.input Reg_def_use_used_in_block.csv

.decl Reg_used_for(EA:number,Reg:number,Type:number)
.input Reg_used_for.csv

.decl Relative_jump_table_entry_candidate(EA:number,TableStart:number,Size:number,Reference:number,Dest:number,Scale:number,Offset:number)
.input Relative_jump_table_entry_candidate.csv

.decl Stack_def_use_def(EA:number,VarReg:number,VarPos:number)
.input Stack_def_use_def.csv

.decl Stack_def_use_defined_in_block(Block:number,VarReg:number,VarPos:number)
.input Stack_def_use_defined_in_block.csv

.decl Stack_def_use_live_var_def(Block:number,VarIdentityReg:number,VarIdentityPos:number,LiveVarReg:number,LiveVarPos:number,EA_def:number)
.input Stack_def_use_live_var_def.csv

.decl Stack_def_use_ref_in_block(Block:number,VarReg:number,VarPos:number)
.input Stack_def_use_ref_in_block.csv

.decl Stack_def_use_used_in_block(Block:number,EA_used:number,VarReg:number,VarPos:number,Index:number)
.input Stack_def_use_used_in_block.csv

.decl Stack_def_use_used(EA:number,VarReg:number,VarPos:number,Index:number)
.input Stack_def_use_used.csv


# -------------------- fake edbs ------------------- */
# .decl Stack_def_use_live_var_used_in_block(Block:number,EA:number,LiveVar:stack_var,UsedVar:stack_var,EA_used:number,Index:number,Moves:number)
# .input Stack_def_use_live_var_used_in_block.csv

.decl Stack_def_use_live_var_used(Block:number,LiveVarReg:number,LiveVarPos:number,UsedVarReg:number,UsedVarPos:number,EA_used:number,Index:number,Moves:number) # overridable
.input Stack_def_use_live_var_used.csv

.decl Jump_table_start(EA_jump:number,Size:number,TableStart:number,TableRef:number,Scale:number)
.input Jump_table_start.csv

.decl def_used_for_address_0(EA_def:number,Reg:number,Type:number)
.input Def_used_for_address.csv

.decl Stack_def_use_block_last_def(EA:number,EA_def:number,VarReg:number,VarPos:number)
.input Stack_def_use_block_last_def.csv


# -------------------- idbs ------------------- 
.printsize
.decl Stack_def_use_def_used(EA_def:number,VarDefReg:number,VarDefPos:number,EA_used:number,VarUsedReg:number,VarUsedPos:number)
.printsize
.decl Reg_def_use_return_val_used(EA_call:number,Callee:number,Reg:number,EA_used:number,Index_used:number)
.printsize
.decl Reg_def_use_live_var_used(Block:number,LiveVar:number,EA_used:number,Index:number) # overridable
.printsize
.decl Jump_table_target(EA:number,Dest:number)
.printsize
.decl Reg_def_use_def_used(EA_def:number,Var:number,EA_used:number,Index_used:number)
.printsize
.decl Reg_def_use_live_var_at_prior_used(EA_used:number,BlockUsed:number,Var:number)
.printsize
.decl Reg_def_use_live_var_at_block_end(Block:number,BlockUsed:number,Var:number)
.printsize
.decl Reg_reg_arithmetic_operation_defs(EA:number,Reg_def:number,EA_def1:number,Reg1:number,EA_def2:number,Reg2:number,Mult:number,Offset:number)
.printsize
.decl Def_used_for_address(EA_def:number,Reg:number,Type:number)
.printsize
.decl Stack_def_use_live_var_at_block_end(Block:number,BlockUsed:number,VarReg:number,VarPos:number)
.printsize
.decl Stack_def_use_live_var_at_prior_used(EA_used:number,BlockUsed:number,VarReg:number,VarPos:number)



.rule
# -------------------- rules ------------------- 

##### Block_next (moved to fake edb)
# Block_next(Block,EA,Block2) :- 
#    Block_last_instruction(Block,EA),
#    May_fallthrough(EA,Block2),
#    !No_return_call_propagated(EA),
#    !Inter_procedural_edge(EA,Block2),
#    Block(Block2).
# Block_next(Block,EA,Block2) :- 
#    Lsda_callsite_addresses(Beg,End,Block2),
#    Block_last_instruction(Block,EA),
#    EA >= Beg,
#    EA < End,
#    Block(Block2).
# Block_next(Block,EA,EA_next) :- 
#    Block_last_instruction(Block,EA),
#    Direct_jump(EA,EA_next),
#    !Inter_procedural_edge(EA,EA_next).
# Block_next(Block,EA,Dest) :- 
#    Block_last_instruction(Block,EA),
#    Jump_table_target(EA,Dest).
##### end of Block_next (4/4)


##### Jump_table_target
Jump_table_target(EA,Dest) :- 
   Jump_table_start(EA,Size,TableStart,_,_),  # fake edb
   Relative_jump_table_entry_candidate(_,TableStart,Size,_,Dest,_,_).
##### end of Jump_table_target (1/1)


##### Reg_def_use_def_used
Reg_def_use_def_used(EA_def,Var,EA_used,Index) :- 
   Reg_def_use_used(EA_used,Var,Index),
   Reg_def_use_block_last_def(EA_used,EA_def,Var).


Reg_def_use_def_used(EA_def,VarIdentity,EA_used,Index) :- 
   Reg_def_use_live_var_at_block_end(Block,BlockUsed,Var),
   Reg_def_use_live_var_def(Block,VarIdentity,Var,EA_def),
   Reg_def_use_live_var_used(BlockUsed,Var,EA_used,Index).  
# .plan 1:(3,1,2)

Reg_def_use_def_used(EA_def,Var,Next_EA_used,NextIndex) :- 
   Reg_def_use_live_var_at_prior_used(EA_used,NextUsedBlock,Var),
   Reg_def_use_def_used(EA_def,Var,EA_used,_),
   Reg_def_use_live_var_used(NextUsedBlock,Var,Next_EA_used,NextIndex).  

Reg_def_use_def_used(EA_def,Reg,EA_used,Index) :- 
   Reg_def_use_return_val_used(_,Callee,Reg,EA_used,Index),
   Reg_def_use_return_block_end(Callee,_,_,BlockEnd),
   Reg_def_use_block_last_def(BlockEnd,EA_def,Reg).
##### end of Reg_def_use_def_used (4/4)


##### Reg_def_use_return_val_used
Reg_def_use_return_val_used(EA_call,Callee,Reg,EA_used,Index_used) :- 
   Arch_return_reg(Reg),
   Reg_def_use_def_used(EA_call,Reg,EA_used,Index_used),
   Direct_call(EA_call,Callee).
##### end of Reg_def_use_return_val_used (1/1)


##### Reg_def_use_live_var_def
Reg_def_use_live_var_used(Block,Var,EA_used,Index) :- 
   Reg_def_use_used_in_block(Block,EA_used,Var,Index),
   !Reg_def_use_block_last_def(EA_used,_,Var).

Reg_def_use_live_var_used(RetBlock,Reg,EA_used,Index) :- 
   Reg_def_use_return_block_end(Callee,_,RetBlock,RetBlockEnd),
   !Reg_def_use_block_last_def(RetBlockEnd,_,Reg),
   Reg_def_use_return_val_used(_,Callee,Reg,EA_used,Index).
##### end of Reg_def_use_live_var_def (1/1)


##### Reg_def_use_live_var_at_prior_used
Reg_def_use_live_var_at_prior_used(EA_used,BlockUsed,Var) :- 
   Reg_def_use_live_var_at_block_end(Block,BlockUsed,Var),
   Reg_def_use_used_in_block(Block,EA_used,Var,_),
   !Reg_def_use_defined_in_block(Block,Var).
##### end of Reg_def_use_live_var_at_prior_used (1/1)


##### Reg_def_use_live_var_at_block_end
Reg_def_use_live_var_at_block_end(PrevBlock,Block,Var) :- 
   Block_next(PrevBlock,PrevBlockEnd,Block),
   Reg_def_use_live_var_used(Block,Var,_,_),
   !Reg_def_use_flow_def(PrevBlockEnd,Var,Block,_).

Reg_def_use_live_var_at_block_end(PrevBlock,BlockUsed,Var) :- 
   Reg_def_use_live_var_at_block_end(Block,BlockUsed,Var),
   !Reg_def_use_ref_in_block(Block,Var),
   Block_next(PrevBlock,_,Block). 
# .plan 1:(2,1)
##### end of Reg_def_use_live_var_at_block_end (2/2)


##### Reg_reg_arithmetic_operation_defs
Reg_reg_arithmetic_operation_defs(EA,Reg_def,EA_def1,Reg1,EA_def2,Reg2,Mult,Offset) :- 
   Def_used_for_address(EA,Reg_def,_),
   Arch_reg_reg_arithmetic_operation(EA,Reg_def,Reg1,Reg2,Mult,Offset),
   Reg1 != Reg2,
   Reg_def_use_def_used(EA_def1,Reg1,EA,_),
   EA != EA_def1,
   Reg_def_use_def_used(EA_def2,Reg2,EA,_),
   EA != EA_def2.
# .plan 1:(3,1,2,4), 2:(4,1,2,3)
##### end of Reg_reg_arithmetic_operation_defs (1/1)



##### Def_used_for_address
Def_used_for_address(EA,Reg,Type) :- 
   def_used_for_address_0(EA,Reg,Type),
   Type = 371929.

# Def_used_for_address(EA,Reg,"PCRelative") :- 
#    Arch_pc_relative_addr(EA,Reg,_).

Def_used_for_address(EA_def,Reg,Type) :- 
   Reg_def_use_def_used(EA_def,Reg,EA,_),
   Reg_used_for(EA,Reg,Type).

Def_used_for_address(EA_def,Reg,Type) :- 
   Def_used_for_address(EA_used,_,Type),
   Reg_def_use_def_used(EA_def,Reg,EA_used,_).

Def_used_for_address(EA_def,Reg1,Type) :- 
   Arch_memory_access(332573,EALoad,Reg2,RegBaseLoad,332575,StackPosLoad),
   Stack_def_use_def_used(EAStore,RegBaseStore,StackPosStore,EALoad,RegBaseLoad,StackPosLoad), # truncate the last argument, Stack_def_use_def_used(EAStore,RegBaseStore,StackPosStore,EALoad,RegBaseLoad,StackPosLoad,_),
   Arch_memory_access(333071,EAStore,Reg1,RegBaseStore,332575,StackPosStore),
   Reg_def_use_def_used(EA_def,Reg1,EAStore,_),
   Def_used_for_address(EALoad,Reg2,Type).         # Reordered: move Def_used_for_address(EALoad,Reg2,Type) to last position
##### end of Def_used_for_address (4/4)


##### Stack_def_use_def_used 
Stack_def_use_def_used(EA_def,Varr,Varp,EA_used,Varr,Varp) :- 
   Stack_def_use_used(EA_used,Varr,Varp,_),
   Stack_def_use_block_last_def(EA_used,EA_def,Varr,Varp).

Stack_def_use_def_used(EA_def,DefVarr,DefVarp,EA_used,VarUsedr,VarUsedp) :- 
   Stack_def_use_live_var_at_block_end(Block,BlockUsed,Varr,Varp),
   Stack_def_use_live_var_used(BlockUsed,Varr,Varp,VarUsedr,VarUsedp,EA_used,_,_), # fake edb
   Stack_def_use_live_var_def(Block,DefVarr,DefVarp,Varr,Varp,EA_def).        # Reordered: switch last two atom position
# .plan 1:(3,1,2)

Stack_def_use_def_used(EA_def,DefVarr,DefVarp,EA_used,UsedVarr,UsedVarp) :- 
#    Stack_def_use_live_var_used_in_block(_,EA,DefVarr,DefVarp,UsedVarr,UsedVarp,EA_used,Index,_),  # replace by the following atom
   Stack_def_use_live_var_used(EA,DefVarr,DefVarp,UsedVarr,UsedVarp,EA_used,_,_), # fake edb
   May_fallthrough(EA_def,EA),
   Code_in_block(EA_def,Block),
   Code_in_block(EA,Block),
   Stack_def_use_def(EA_def,DefVarr,DefVarp).
 
Stack_def_use_def_used(EA_def,VarDefr,VarDefp,Next_EA_used,VarUsedr,VarUsedp) :- 
   Stack_def_use_live_var_at_prior_used(EA_used,NextUsedBlock,Varr,Varp),
   Stack_def_use_def_used(EA_def,VarDefr,VarDefp,EA_used,Varr,Varp),
   Stack_def_use_live_var_used(NextUsedBlock,Varr,Varp,VarUsedr,VarUsedp,Next_EA_used,_,_). # fake edb
##### end of Stack_def_use_def_used (4/4)


##### Stack_def_use_live_var_at_block_end
Stack_def_use_live_var_at_block_end(PrevBlock,BlockUsed,inlined_BaseReg_374,inlined_StackPos_374) :- 
   Stack_def_use_live_var_at_block_end(Block,BlockUsed,inlined_BaseReg_374,inlined_StackPos_374),
   !Stack_def_use_ref_in_block(Block,inlined_BaseReg_374,inlined_StackPos_374),
   !Reg_def_use_defined_in_block(Block,inlined_BaseReg_374),
   Block_next(PrevBlock,_,Block).
# .plan 1:(2,1)

Stack_def_use_live_var_at_block_end(PrevBlock,Block,Varr,Varp) :- 
   Block_next(PrevBlock,_,Block),
   Stack_def_use_live_var_used(Block,Varr,Varp,_,_,_,_,_). # fake edb
##### end of Stack_def_use_live_var_at_block_end (2/2)


##### Stack_def_use_live_var_at_prior_used
Stack_def_use_live_var_at_prior_used(EA_used,BlockUsed,inlined_BaseReg_375,inlined_StackPos_375) :- 
   Stack_def_use_live_var_at_block_end(Block,BlockUsed,inlined_BaseReg_375,inlined_StackPos_375),
   Stack_def_use_used_in_block(Block,EA_used,inlined_BaseReg_375,inlined_StackPos_375,_),
   !Reg_def_use_defined_in_block(Block,inlined_BaseReg_375),
   !Stack_def_use_defined_in_block(Block,inlined_BaseReg_375,inlined_StackPos_375).
##### end of Stack_def_use_live_var_at_prior_used (1/1)




