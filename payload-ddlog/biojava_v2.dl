typedef signed<32> = number

input relation DirectSuperclass(class: number, superclass: number)
input relation DirectSuperinterface(ref: number, interface: number)
input relation MainClass(class: number)
input relation FormalParam(index: number, method: number, var: number)
input relation ComponentType(arrayType: number, componentType: number)
input relation AssignReturnValue(invocation: number, to: number)
input relation ActualParam(index: number, invocation: number, var: number)
input relation Method_Modifier(mod: number, method: number)
input relation Var_Type(var: number, type: number)
input relation HeapAllocation_Type(heap: number, type: number)
input relation _ClassType(class: number)
input relation _ArrayType(arrayType: number)
input relation _InterfaceType(interface: number)
input relation _Var_DeclaringMethod(var: number, method: number)
input relation _ApplicationClass(type: number)
input relation _ThisVar(method: number, var: number)
input relation _NormalHeap(id: number, type: number)
input relation _StringConstant(id: number)
input relation _AssignHeapAllocation(instruction: number, index: number, heap: number, to: number, inmethod: number, linenumber: number)
input relation _AssignLocal(instruction: number, index: number, from: number, to: number, inmethod: number)
input relation _AssignCast(instruction: number, index: number, from: number, to: number, type: number, inmethod: number)
input relation _Field(signature: number, declaringClass: number, simplename: number, type: number)
input relation _StaticMethodInvocation(instruction: number, index: number, signature: number, method: number)
input relation _SpecialMethodInvocation(instruction: number, index: number, signature: number, base: number, method: number)
input relation _VirtualMethodInvocation(instruction: number, index: number, signature: number, base: number, method: number)
input relation _Method(method: number, simplename: number, params: number, declaringType: number, returnType: number, jvmDescriptor: number, arity: number)
input relation Method_Descriptor(method: number, descriptor: number)
input relation _StoreInstanceField(instruction: number, index: number, from: number, base: number, signature: number, method: number)
input relation _LoadInstanceField(instruction: number, index: number, to: number, base: number, signature: number, method: number)
input relation _StoreStaticField(instruction: number, index: number, from: number, signature: number, method: number)
input relation _LoadStaticField(instruction: number, index: number, to: number, signature: number, method: number)
input relation _StoreArrayIndex(instruction: number, index: number, from: number, base: number, method: number)
input relation _LoadArrayIndex(instruction: number, index: number, to: number, base: number, method: number)
input relation _Return(instruction: number, index: number, var: number, method: number)

relation isType(t: number)
relation isReferenceType(t: number)
relation isArrayType(t: number)
relation isClassType(t: number)
relation isInterfaceType(t: number)
relation ApplicationClass(ref: number)
relation Field_DeclaringType(field: number, declaringClass: number)
relation Method_DeclaringType(method: number, declaringType: number)
relation Method_ReturnType(method: number, returnType: number)
relation Method_SimpleName(method: number, simpleName: number)
relation Method_Params(method: number, params: number)
relation ThisVar(method: number, var: number)
relation Var_DeclaringMethod(var: number, method: number)
relation Instruction_Method(insn: number, inMethod: number)
relation isVirtualMethodInvocation_Insn(insn: number)
relation isStaticMethodInvocation_Insn(insn: number)
relation FieldInstruction_Signature(insn: number, sign: number)
relation LoadInstanceField_Base(insn: number, var: number)
relation LoadInstanceField_To(insn: number, var: number)
relation StoreInstanceField_From(insn: number, var: number)
relation StoreInstanceField_Base(insn: number, var: number)
relation LoadStaticField_To(insn: number, var: number)
relation StoreStaticField_From(insn: number, var: number)
relation LoadArrayIndex_Base(insn: number, var: number)
relation LoadArrayIndex_To(insn: number, var: number)
relation StoreArrayIndex_From(insn: number, var: number)
relation StoreArrayIndex_Base(insn: number, var: number)
relation AssignInstruction_To(insn: number, to: number)
relation AssignCast_From(insn: number, from: number)
relation AssignCast_Type(insn: number, type: number)
relation AssignLocal_From(insn: number, from: number)
relation AssignHeapAllocation_Heap(insn: number, heap: number)
relation ReturnNonvoid_Var(return: number, var: number)
relation MethodInvocation_Method(invocation: number, signature: number)
relation VirtualMethodInvocation_Base(invocation: number, base: number)
relation VirtualMethodInvocation_SimpleName(invocation: number, simplename: number)
relation VirtualMethodInvocation_Descriptor(invocation: number, descriptor: number)
relation SpecialMethodInvocation_Base(invocation: number, base: number)
relation MethodInvocation_Base(invocation: number, base: number)
relation LoadInstanceField(base: number, sig: number, to: number, inmethod: number)
relation StoreInstanceField(from: number, base: number, signature: number, inmethod: number)
relation LoadStaticField(sig: number, to: number, inmethod: number)
relation StoreStaticField(from: number, signature: number, inmethod: number)
relation LoadArrayIndex(base: number, to: number, inmethod: number)
relation StoreArrayIndex(from: number, base: number, inmethod: number)
relation AssignCast(type: number, from: number, to: number, inmethod: number)
relation AssignLocal(from: number, to: number, inmethod: number)
relation AssignHeapAllocation(heap: number, to: number, inmethod: number)
relation ReturnVar(var: number, method: number)
relation StaticMethodInvocation(invocation: number, signature: number, inmethod: number)
relation MethodLookup(simplename: number, descriptor: number, type: number, method: number)
relation MethodImplemented(simplename: number, descriptor: number, type: number, method: number)
relation DirectSubclass(a: number, c: number)
relation Subclass(c: number, a: number)
relation Superclass(c: number, a: number)
relation Superinterface(k: number, c: number)
relation SubtypeOf(subtype: number, type: number)
relation SupertypeOf(supertype: number, type: number)
relation SubtypeOfDifferent(subtype: number, type: number)
relation MainMethodDeclaration(method: number)
relation ClassInitializer(type: number, method: number)
relation InitializedClass(classOrInterface: number)
relation Assign(to: number, from: number)
relation VarPointsTo(heap: number, var: number)
relation InstanceFieldPointsTo(heap: number, fld: number, baseheap: number)
relation StaticFieldPointsTo(heap: number, fld: number)
relation CallGraphEdge(invocation: number, meth: number)
relation ArrayIndexPointsTo(baseheap: number, heap: number)
relation Reachable(method: number)

output relation RelationSizes(relation_name: string, size: number)

isType(class) :- _ClassType(class).
isReferenceType(class) :- _ClassType(class).
isClassType(class) :- _ClassType(class).

isType(arrayType) :- _ArrayType(arrayType).
isReferenceType(arrayType) :- _ArrayType(arrayType).
isArrayType(arrayType) :- _ArrayType(arrayType).

isType(interface) :- _InterfaceType(interface).
isReferenceType(interface) :- _InterfaceType(interface).
isInterfaceType(interface) :- _InterfaceType(interface).

Var_DeclaringMethod(var, method) :- _Var_DeclaringMethod(var, method).

isType(type) :- _ApplicationClass(type).
isReferenceType(type) :- _ApplicationClass(type).
ApplicationClass(type) :- _ApplicationClass(type).

ThisVar(method, var) :- _ThisVar(method, var).

isType(type) :- _NormalHeap(_, type).

Instruction_Method(instruction, method) :- _AssignHeapAllocation(instruction, index, heap, to, method, linenumber).
AssignInstruction_To(instruction, to) :- _AssignHeapAllocation(instruction, index, heap, to, method, linenumber).
AssignHeapAllocation_Heap(instruction, heap) :- _AssignHeapAllocation(instruction, index, heap, to, method, linenumber).

Instruction_Method(instruction, method) :- _AssignLocal(instruction, index, from, to, method).
AssignLocal_From(instruction, from) :- _AssignLocal(instruction, index, from, to, method).
AssignInstruction_To(instruction, to) :- _AssignLocal(instruction, index, from, to, method).

Instruction_Method(instruction, method) :- _AssignCast(instruction, index, from, to, type, method).
AssignCast_Type(instruction, type) :- _AssignCast(instruction, index, from, to, type, method).
AssignCast_From(instruction, from) :- _AssignCast(instruction, index, from, to, type, method).
AssignInstruction_To(instruction, to) :- _AssignCast(instruction, index, from, to, type, method).

Field_DeclaringType(signature, declaringType) :- _Field(signature, declaringType, _, _).

MethodInvocation_Base(invocation, base) :- VirtualMethodInvocation_Base(invocation, base).
MethodInvocation_Base(invocation, base) :- SpecialMethodInvocation_Base(invocation, base).

Instruction_Method(instruction, method) :- _StaticMethodInvocation(instruction, index, signature, method).
isStaticMethodInvocation_Insn(instruction) :- _StaticMethodInvocation(instruction, index, signature, method).
MethodInvocation_Method(instruction, signature) :- _StaticMethodInvocation(instruction, index, signature, method).

Instruction_Method(instruction, method) :- _SpecialMethodInvocation(instruction, index, signature, base, method).
SpecialMethodInvocation_Base(instruction, base) :- _SpecialMethodInvocation(instruction, index, signature, base, method).
MethodInvocation_Method(instruction, signature) :- _SpecialMethodInvocation(instruction, index, signature, base, method).

Instruction_Method(instruction, method) :- _VirtualMethodInvocation(instruction, index, signature, base, method).
isVirtualMethodInvocation_Insn(instruction) :- _VirtualMethodInvocation(instruction, index, signature, base, method).
VirtualMethodInvocation_Base(instruction, base) :- _VirtualMethodInvocation(instruction, index, signature, base, method).
MethodInvocation_Method(instruction, signature) :- _VirtualMethodInvocation(instruction, index, signature, base, method).

Method_SimpleName(method, simplename) :- _Method(method, simplename, params, declaringType, returnType, jvmDescriptor, arity).
Method_DeclaringType(method, declaringType) :- _Method(method, simplename, params, declaringType, returnType, jvmDescriptor, arity).

Instruction_Method(instruction, method) :- _StoreInstanceField(instruction, index, from, base, signature, method).
FieldInstruction_Signature(instruction, signature) :- _StoreInstanceField(instruction, index, from, base, signature, method).
StoreInstanceField_Base(instruction, base) :- _StoreInstanceField(instruction, index, from, base, signature, method).
StoreInstanceField_From(instruction, from) :- _StoreInstanceField(instruction, index, from, base, signature, method).

Instruction_Method(instruction, method) :- _LoadInstanceField(instruction, index, to, base, signature, method).
FieldInstruction_Signature(instruction, signature) :- _LoadInstanceField(instruction, index, to, base, signature, method).
LoadInstanceField_Base(instruction, base) :- _LoadInstanceField(instruction, index, to, base, signature, method).
LoadInstanceField_To(instruction, to) :- _LoadInstanceField(instruction, index, to, base, signature, method).

Instruction_Method(instruction, method) :- _StoreStaticField(instruction, index, from, signature, method).
FieldInstruction_Signature(instruction, signature) :- _StoreStaticField(instruction, index, from, signature, method).
StoreStaticField_From(instruction, from) :- _StoreStaticField(instruction, index, from, signature, method).

Instruction_Method(instruction, method) :- _LoadStaticField(instruction, index, to, signature, method).
FieldInstruction_Signature(instruction, signature) :- _LoadStaticField(instruction, index, to, signature, method).
LoadStaticField_To(instruction, to) :- _LoadStaticField(instruction, index, to, signature, method).

Instruction_Method(instruction, method) :- _StoreArrayIndex(instruction, index, from, base, method).
StoreArrayIndex_Base(instruction, base) :- _StoreArrayIndex(instruction, index, from, base, method).
StoreArrayIndex_From(instruction, from) :- _StoreArrayIndex(instruction, index, from, base, method).

Instruction_Method(instruction, method) :- _LoadArrayIndex(instruction, index, to, base, method).
LoadArrayIndex_Base(instruction, base) :- _LoadArrayIndex(instruction, index, to, base, method).
LoadArrayIndex_To(instruction, to) :- _LoadArrayIndex(instruction, index, to, base, method).

Instruction_Method(instruction, method) :- _Return(instruction, index, var, method).
ReturnNonvoid_Var(instruction, var) :- _Return(instruction, index, var, method).

LoadInstanceField(base, sig, to, inmethod) :- Instruction_Method(insn, inmethod), LoadInstanceField_Base(insn, base), FieldInstruction_Signature(insn, sig), LoadInstanceField_To(insn, to).
StoreInstanceField(from, base, sig, inmethod) :- Instruction_Method(insn, inmethod), StoreInstanceField_From(insn, from), StoreInstanceField_Base(insn, base), FieldInstruction_Signature(insn, sig).
LoadStaticField(sig, to, inmethod) :- Instruction_Method(insn, inmethod), FieldInstruction_Signature(insn, sig), LoadStaticField_To(insn, to).
StoreStaticField(from, sig, inmethod) :- Instruction_Method(insn, inmethod), StoreStaticField_From(insn, from), FieldInstruction_Signature(insn, sig).
LoadArrayIndex(base, to, inmethod) :- Instruction_Method(insn, inmethod), LoadArrayIndex_Base(insn, base), LoadArrayIndex_To(insn, to).
StoreArrayIndex(from, base, inmethod) :- Instruction_Method(insn, inmethod), StoreArrayIndex_From(insn, from), StoreArrayIndex_Base(insn, base).
AssignCast(type, from, to, inmethod) :- Instruction_Method(insn, inmethod), AssignCast_From(insn, from), AssignInstruction_To(insn, to), AssignCast_Type(insn, type).
AssignLocal(from, to, inmethod) :- AssignInstruction_To(insn, to), Instruction_Method(insn, inmethod), AssignLocal_From(insn, from).
AssignHeapAllocation(heap, to, inmethod) :- Instruction_Method(insn, inmethod), AssignHeapAllocation_Heap(insn, heap), AssignInstruction_To(insn, to).
ReturnVar(var, method) :- Instruction_Method(insn, method), ReturnNonvoid_Var(insn, var).
StaticMethodInvocation(invocation, signature, inmethod) :- isStaticMethodInvocation_Insn(invocation), Instruction_Method(invocation, inmethod), MethodInvocation_Method(invocation, signature).

VirtualMethodInvocation_SimpleName(invocation, simplename) :- isVirtualMethodInvocation_Insn(invocation), MethodInvocation_Method(invocation, signature), Method_SimpleName(signature, simplename), Method_Descriptor(signature, descriptor).
VirtualMethodInvocation_Descriptor(invocation, descriptor) :- isVirtualMethodInvocation_Insn(invocation), MethodInvocation_Method(invocation, signature), Method_SimpleName(signature, simplename), Method_Descriptor(signature, descriptor).

MethodLookup(simplename, descriptor, type, method) :- MethodImplemented(simplename, descriptor, type, method).
MethodLookup(simplename, descriptor, type, method) :- DirectSuperclass(type, supertype), MethodLookup(simplename, descriptor, supertype, method), not MethodImplemented(simplename, descriptor, type, _).
MethodLookup(simplename, descriptor, type, method) :- DirectSuperinterface(type, supertype), MethodLookup(simplename, descriptor, supertype, method), not MethodImplemented(simplename, descriptor, type, _).
MethodImplemented(simplename, descriptor, type, method) :- Method_SimpleName(method, simplename), Method_Descriptor(method, descriptor), Method_DeclaringType(method, type), not Method_Modifier(779558, method).
MainMethodDeclaration(method) :- MainClass(type), Method_DeclaringType(method, type), method != 1045470, method != 2357714, method != 1614718, Method_SimpleName(method, 780495), Method_Descriptor(method, 5097637), Method_Modifier(1347650, method), Method_Modifier(1347648, method).

DirectSubclass(a, c) :- DirectSuperclass(a, c).
Subclass(c, a) :- DirectSubclass(a, c).
Subclass(c, a) :- Subclass(b, a), DirectSubclass(b, c).
Superclass(c, a) :- Subclass(a, c).
Superinterface(k, c) :- DirectSuperinterface(c, k).
Superinterface(k, c) :- DirectSuperinterface(c, j), Superinterface(k, j).
Superinterface(k, c) :- DirectSuperclass(c, super), Superinterface(k, super).

SubtypeOf(s, s) :- isClassType(s).
SubtypeOf(t, t) :- isType(t).
SubtypeOf(s, t) :- Subclass(t, s).
SubtypeOf(s, s) :- isInterfaceType(s).
SubtypeOf(s, t) :- isClassType(s), Superinterface(t, s).
SubtypeOf(s, t) :- isInterfaceType(s), isType(t), t = 1168277.
SubtypeOf(s, t) :- isArrayType(s), isType(t), t = 1168277.
SubtypeOf(s, t) :- isInterfaceType(s), Superinterface(t, s).
SubtypeOf(s, t) :- SubtypeOf(sc, tc), ComponentType(s, sc), ComponentType(t, tc), isReferenceType(sc), isReferenceType(tc).
SubtypeOf(s, t) :- isArrayType(s), isInterfaceType(t), isType(t), t = 1875761.
SubtypeOf(s, t) :- isArrayType(s), isInterfaceType(t), isType(t), t = 1132248.

SupertypeOf(s, t) :- SubtypeOf(t, s).
SubtypeOfDifferent(s, t) :- SubtypeOf(s, t), s != t.

ClassInitializer(type, method) :- MethodImplemented(1386348, 5096596, type, method).
InitializedClass(superclass) :- InitializedClass(class), DirectSuperclass(class, superclass).
InitializedClass(superinterface) :- InitializedClass(classOrInterface), DirectSuperinterface(classOrInterface, superinterface).
InitializedClass(class) :- MainMethodDeclaration(method), Method_DeclaringType(method, class).
InitializedClass(class) :- Reachable(inmethod), AssignHeapAllocation(heap, _, inmethod), HeapAllocation_Type(heap, class).
InitializedClass(class) :- Reachable(inmethod), Instruction_Method(invocation, inmethod), isStaticMethodInvocation_Insn(invocation), MethodInvocation_Method(invocation, signature), Method_DeclaringType(signature, class).
InitializedClass(classOrInterface) :- Reachable(inmethod), StoreStaticField(_, signature, inmethod), Field_DeclaringType(signature, classOrInterface).
InitializedClass(classOrInterface) :- Reachable(inmethod), LoadStaticField(signature, _, inmethod), Field_DeclaringType(signature, classOrInterface).
Reachable(clinit) :- InitializedClass(class), ClassInitializer(class, clinit).

Assign(actual, formal) :- CallGraphEdge(invocation, method), FormalParam(index, method, formal), ActualParam(index, invocation, actual).
Assign(return, local) :- CallGraphEdge(invocation, method), ReturnVar(return, method), AssignReturnValue(invocation, local).
VarPointsTo(heap, var) :- AssignHeapAllocation(heap, var, inMethod), Reachable(inMethod).
VarPointsTo(heap, to) :- Assign(from, to), VarPointsTo(heap, from).
VarPointsTo(heap, to) :- Reachable(inmethod), AssignLocal(from, to, inmethod), VarPointsTo(heap, from).
VarPointsTo(heap, to) :- Reachable(inmethod), AssignCast(type, from, to, inmethod), SupertypeOf(type, heaptype), HeapAllocation_Type(heap, heaptype), VarPointsTo(heap, from).
ArrayIndexPointsTo(baseheap, heap) :- Reachable(inmethod), StoreArrayIndex(from, base, inmethod), VarPointsTo(baseheap, base), VarPointsTo(heap, from), HeapAllocation_Type(heap, heaptype), HeapAllocation_Type(baseheap, baseheaptype), ComponentType(baseheaptype, componenttype), SupertypeOf(componenttype, heaptype).
VarPointsTo(heap, to) :- Reachable(inmethod), LoadArrayIndex(base, to, inmethod), VarPointsTo(baseheap, base), ArrayIndexPointsTo(baseheap, heap), Var_Type(to, type), SupertypeOf(type, basecomponenttype), HeapAllocation_Type(baseheap, baseheaptype), ComponentType(baseheaptype, basecomponenttype).
VarPointsTo(heap, to) :- Reachable(inmethod), LoadInstanceField(base, signature, to, inmethod), InstanceFieldPointsTo(heap, signature, baseheap), VarPointsTo(baseheap, base).
VarPointsTo(heap, to) :- Reachable(inmethod), LoadStaticField(fld, to, inmethod), StaticFieldPointsTo(heap, fld).
VarPointsTo(heap, this) :- Reachable(inMethod), Instruction_Method(invocation, inMethod), VirtualMethodInvocation_Base(invocation, base), VarPointsTo(heap, base), HeapAllocation_Type(heap, heaptype), MethodLookup(simplename, descriptor, heaptype, toMethod), VirtualMethodInvocation_SimpleName(invocation, simplename), VirtualMethodInvocation_Descriptor(invocation, descriptor), ThisVar(toMethod, this).
InstanceFieldPointsTo(heap, fld, baseheap) :- Reachable(inmethod), StoreInstanceField(from, base, fld, inmethod), VarPointsTo(heap, from), VarPointsTo(baseheap, base).
StaticFieldPointsTo(heap, fld) :- Reachable(inmethod), StoreStaticField(from, fld, inmethod), VarPointsTo(heap, from).

Reachable(toMethod) :- Reachable(inMethod), Instruction_Method(invocation, inMethod), VirtualMethodInvocation_Base(invocation, base), VarPointsTo(heap, base), HeapAllocation_Type(heap, heaptype), VirtualMethodInvocation_SimpleName(invocation, simplename), VirtualMethodInvocation_Descriptor(invocation, descriptor), MethodLookup(simplename, descriptor, heaptype, toMethod).
CallGraphEdge(invocation, toMethod) :- Reachable(inMethod), Instruction_Method(invocation, inMethod), VirtualMethodInvocation_Base(invocation, base), VarPointsTo(heap, base), HeapAllocation_Type(heap, heaptype), VirtualMethodInvocation_SimpleName(invocation, simplename), VirtualMethodInvocation_Descriptor(invocation, descriptor), MethodLookup(simplename, descriptor, heaptype, toMethod).

Reachable(tomethod) :- Reachable(inmethod), StaticMethodInvocation(invocation, tomethod, inmethod).
CallGraphEdge(invocation, tomethod) :- Reachable(inmethod), StaticMethodInvocation(invocation, tomethod, inmethod).

Reachable(tomethod) :- Reachable(inmethod), Instruction_Method(invocation, inmethod), SpecialMethodInvocation_Base(invocation, base), VarPointsTo(heap, base), MethodInvocation_Method(invocation, tomethod), ThisVar(tomethod, this).
CallGraphEdge(invocation, tomethod) :- Reachable(inmethod), Instruction_Method(invocation, inmethod), SpecialMethodInvocation_Base(invocation, base), VarPointsTo(heap, base), MethodInvocation_Method(invocation, tomethod), ThisVar(tomethod, this).
VarPointsTo(heap, this) :- Reachable(inmethod), Instruction_Method(invocation, inmethod), SpecialMethodInvocation_Base(invocation, base), VarPointsTo(heap, base), MethodInvocation_Method(invocation, tomethod), ThisVar(tomethod, this).

Reachable(method) :- MainMethodDeclaration(method).

RelationSizes("VarPointsTo", count_distinct(x)) :- VarPointsTo(x, _).
RelationSizes("Reachable", count_distinct(x)) :- Reachable(x).
RelationSizes("CallGraphEdge", count_distinct(x)) :- CallGraphEdge(x, _).
RelationSizes("SubtypeOf", count_distinct(x)) :- SubtypeOf(x, _).