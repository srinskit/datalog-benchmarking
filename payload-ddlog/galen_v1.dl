typedef TId = signed<32>

input relation P(X: TId, Z: TId)
input relation Q(X: TId, Y: TId, Z: TId)
input relation R(R: TId, P: TId, E: TId)
input relation C(Y: TId, Z: TId, W: TId)
input relation U(R: TId, Z: TId, W: TId)
input relation S(R: TId, P: TId)

output relation OutP(X: TId, Z: TId)
output relation OutQ(X: TId, Y: TId, Z: TId)
output relation RelationSizes(relation_name: string, size: signed<32>)

OutP(x,y) :- P(x,y).
OutQ(x,y,z) :- Q(x,y,z).
OutP(x,z) :- OutP(x,y), OutP(y,z).
OutQ(x,r,z) :- OutQ(y,r,z), OutP(x,y).
OutP(x,z) :- OutQ(x,r,y), U(w,r,z), OutP(y,w).
OutP(x,z) :- C(y,w,z), OutP(x,y), OutP(x,w).
OutQ(x,q,z) :- S(r,q), OutQ(x,r,z).
OutQ(x,e,o) :- OutQ(z,u,o), R(y,u,e), OutQ(x,y,z).

RelationSizes("OutP", size) :- size = Aggregate((), count_distinct(OutP(x, z))).
RelationSizes("OutQ", size) :- size = Aggregate((), count_distinct(OutQ(x, y, z))).