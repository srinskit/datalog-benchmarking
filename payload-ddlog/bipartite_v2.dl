typedef node = signed<32>

input relation Arc(y: node, x: node)
input relation Source(x: node)

output relation BipartiteViolation(x: node)
output relation Zero(x: node)
output relation MOne(x: node)

Zero(x) :- Source(x).

MOne(y) :- Arc(x, y), Zero(x).
MOne(x) :- Arc(x, y), Zero(y).

Zero(y) :- Arc(x, y), MOne(x).
Zero(x) :- Arc(x, y), MOne(y).

BipartiteViolation(x) :- Zero(x), MOne(x).

output relation RelationSizes(rel: string, size: bit<64>)
RelationSizes("Zero", size) :- Zero(x),  var size = (x).group_by(()).count_distinct().
RelationSizes("MOne", size) :- MOne(x),  var size = (x).group_by(()).count_distinct().
RelationSizes("BipartiteViolation", size) :- BipartiteViolation(x),  var size = (x).group_by(()).count_distinct().