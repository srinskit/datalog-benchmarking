typedef signed<32> = number

input relation Arch_memory_access(AccessType: number, EA: number, DirectReg: number, BaseReg: number, IndexReg: number, Offset: number)
input relation Arch_reg_reg_arithmetic_operation(EA: number, Dst: number, Src1: number, Src2: number, Mult: number, Offset: number)
input relation Arch_return_reg(Reg: number)
input relation Block_next(Block: number, BlockEnd: number, NextBlock: number)
input relation Block_last_instruction(Block: number, EA: number)
input relation Code_in_block(EA: number, Block: number)
input relation Direct_call(EA: number, Dest: number)
input relation May_fallthrough(o: number, d: number)
input relation Reg_def_use_block_last_def(EA: number, EA_def: number, Var: number)
input relation Reg_def_use_defined_in_block(Block: number, Var: number)
input relation Reg_def_use_flow_def(EA: number, Var: number, EA_next: number, Value: number)
input relation Reg_def_use_live_var_def(Block: number, VarIdentity: number, LiveVar: number, EA_def: number)
input relation Reg_def_use_ref_in_block(Block: number, Var: number)
input relation Reg_def_use_return_block_end(Callee: number, CalleeEnd: number, Block: number, BlockEnd: number)
input relation Reg_def_use_used(EA: number, Var: number, Index: number)
input relation Reg_def_use_used_in_block(Block: number, EA_used: number, Var: number, Index: number)
input relation Reg_used_for(EA: number, Reg: number, Type: number)
input relation Relative_jump_table_entry_candidate(EA: number, TableStart: number, Size: number, Reference: number, Dest: number, Scale: number, Offset: number)
input relation Stack_def_use_def(EA: number, VarReg: number, VarPos: number)
input relation Stack_def_use_defined_in_block(Block: number, VarReg: number, VarPos: number)
input relation Stack_def_use_live_var_def(Block: number, VarIdentityReg: number, VarIdentityPos: number, LiveVarReg: number, LiveVarPos: number, EA_def: number)
input relation Stack_def_use_ref_in_block(Block: number, VarReg: number, VarPos: number)
input relation Stack_def_use_used_in_block(Block: number, EA_used: number, VarReg: number, VarPos: number, Index: number)
input relation Stack_def_use_used(EA: number, VarReg: number, VarPos: number, Index: number)
input relation Stack_def_use_live_var_used(Block: number, LiveVarReg: number, LiveVarPos: number, UsedVarReg: number, UsedVarPos: number, EA_used: number, Index: number, Moves: number)
input relation Jump_table_start(EA_jump: number, Size: number, TableStart: number, TableRef: number, Scale: number)
input relation def_used_for_address_0(EA_def: number, Reg: number, Type: number)
input relation Stack_def_use_block_last_def(EA: number, EA_def: number, VarReg: number, VarPos: number)

relation Stack_def_use_def_used(EA_def: number, VarDefReg: number, VarDefPos: number, EA_used: number, VarUsedReg: number, VarUsedPos: number)
relation Reg_def_use_return_val_used(EA_call: number, Callee: number, Reg: number, EA_used: number, Index_used: number)
relation Reg_def_use_live_var_used(Block: number, LiveVar: number, EA_used: number, Index: number)
relation Jump_table_target(EA: number, Dest: number)
relation Reg_def_use_def_used(EA_def: number, Var: number, EA_used: number, Index_used: number)
relation Reg_def_use_live_var_at_prior_used(EA_used: number, BlockUsed: number, Var: number)
relation Reg_def_use_live_var_at_block_end(Block: number, BlockUsed: number, Var: number)
relation Reg_reg_arithmetic_operation_defs(EA: number, Reg_def: number, EA_def1: number, Reg1: number, EA_def2: number, Reg2: number, Mult: number, Offset: number)
relation Def_used_for_address(EA_def: number, Reg: number, Type: number)
relation Stack_def_use_live_var_at_block_end(Block: number, BlockUsed: number, VarReg: number, VarPos: number)
relation Stack_def_use_live_var_at_prior_used(EA_used: number, BlockUsed: number, VarReg: number, VarPos: number)

output relation RelationSizes(relation_name: string, size: number)

Jump_table_target(EA, Dest) :- 
   Jump_table_start(EA, Size, TableStart, _, _),
   Relative_jump_table_entry_candidate(_, TableStart, Size, _, Dest, _, _).

Reg_def_use_def_used(EA_def, Var, EA_used, Index) :- 
   Reg_def_use_used(EA_used, Var, Index),
   Reg_def_use_block_last_def(EA_used, EA_def, Var).

Reg_def_use_def_used(EA_def, VarIdentity, EA_used, Index) :- 
   Reg_def_use_live_var_at_block_end(Block, BlockUsed, Var),
   Reg_def_use_live_var_def(Block, VarIdentity, Var, EA_def),
   Reg_def_use_live_var_used(BlockUsed, Var, EA_used, Index).

Reg_def_use_def_used(EA_def, Var, Next_EA_used, NextIndex) :- 
   Reg_def_use_live_var_at_prior_used(EA_used, NextUsedBlock, Var),
   Reg_def_use_def_used(EA_def, Var, EA_used, _),
   Reg_def_use_live_var_used(NextUsedBlock, Var, Next_EA_used, NextIndex).

Reg_def_use_def_used(EA_def, Reg, EA_used, Index) :- 
   Reg_def_use_return_val_used(_, Callee, Reg, EA_used, Index),
   Reg_def_use_return_block_end(Callee, _, _, BlockEnd),
   Reg_def_use_block_last_def(BlockEnd, EA_def, Reg).

Reg_def_use_return_val_used(EA_call, Callee, Reg, EA_used, Index_used) :- 
   Arch_return_reg(Reg),
   Reg_def_use_def_used(EA_call, Reg, EA_used, Index_used),
   Direct_call(EA_call, Callee).

Reg_def_use_live_var_used(Block, Var, EA_used, Index) :- 
   Reg_def_use_used_in_block(Block, EA_used, Var, Index),
   not Reg_def_use_block_last_def(EA_used, _, Var).

Reg_def_use_live_var_used(RetBlock, Reg, EA_used, Index) :- 
   Reg_def_use_return_block_end(Callee, _, RetBlock, RetBlockEnd),
   not Reg_def_use_block_last_def(RetBlockEnd, _, Reg),
   Reg_def_use_return_val_used(_, Callee, Reg, EA_used, Index).

Reg_def_use_live_var_at_prior_used(EA_used, BlockUsed, Var) :- 
   Reg_def_use_live_var_at_block_end(Block, BlockUsed, Var),
   Reg_def_use_used_in_block(Block, EA_used, Var, _),
   not Reg_def_use_defined_in_block(Block, Var).

Reg_def_use_live_var_at_block_end(PrevBlock, Block, Var) :- 
   Block_next(PrevBlock, PrevBlockEnd, Block),
   Reg_def_use_live_var_used(Block, Var, _, _),
   not Reg_def_use_flow_def(PrevBlockEnd, Var, Block, _).

Reg_def_use_live_var_at_block_end(PrevBlock, BlockUsed, Var) :- 
   Reg_def_use_live_var_at_block_end(Block, BlockUsed, Var),
   not Reg_def_use_ref_in_block(Block, Var),
   Block_next(PrevBlock, _, Block).

Reg_reg_arithmetic_operation_defs(EA, Reg_def, EA_def1, Reg1, EA_def2, Reg2, Mult, Offset) :- 
   Def_used_for_address(EA, Reg_def, _),
   Arch_reg_reg_arithmetic_operation(EA, Reg_def, Reg1, Reg2, Mult, Offset),
   Reg1 != Reg2,
   Reg_def_use_def_used(EA_def1, Reg1, EA, _),
   EA != EA_def1,
   Reg_def_use_def_used(EA_def2, Reg2, EA, _),
   EA != EA_def2.

Def_used_for_address(EA, Reg, Type) :- 
   def_used_for_address_0(EA, Reg, Type),
   Type = 8859592.

Def_used_for_address(EA_def, Reg, Type) :- 
   Reg_def_use_def_used(EA_def, Reg, EA, _),
   Reg_used_for(EA, Reg, Type).

Def_used_for_address(EA_def, Reg, Type) :- 
   Def_used_for_address(EA_used, _, Type),
   Reg_def_use_def_used(EA_def, Reg, EA_used, _).

Def_used_for_address(EA_def, Reg1, Type) :- 
   Def_used_for_address(EALoad, Reg2, Type),
   Arch_memory_access(0, EALoad, Reg2, RegBaseLoad, 4, StackPosLoad),
   Stack_def_use_def_used(EAStore, RegBaseStore, StackPosStore, EALoad, RegBaseLoad, StackPosLoad),
   Arch_memory_access(2309374, EAStore, Reg1, RegBaseStore, 4, StackPosStore),
   Reg_def_use_def_used(EA_def, Reg1, EAStore, _).

Stack_def_use_def_used(EA_def, Varr, Varp, EA_used, Varr, Varp) :- 
   Stack_def_use_used(EA_used, Varr, Varp, _),
   Stack_def_use_block_last_def(EA_used, EA_def, Varr, Varp).

Stack_def_use_def_used(EA_def, DefVarr, DefVarp, EA_used, VarUsedr, VarUsedp) :- 
   Stack_def_use_live_var_at_block_end(Block, BlockUsed, Varr, Varp),
   Stack_def_use_live_var_def(Block, DefVarr, DefVarp, Varr, Varp, EA_def),
   Stack_def_use_live_var_used(BlockUsed, Varr, Varp, VarUsedr, VarUsedp, EA_used, _, _).

Stack_def_use_def_used(EA_def, DefVarr, DefVarp, EA_used, UsedVarr, UsedVarp) :- 
   Stack_def_use_live_var_used(EA, DefVarr, DefVarp, UsedVarr, UsedVarp, EA_used, _, _),
   May_fallthrough(EA_def, EA),
   Stack_def_use_def(EA_def, DefVarr, DefVarp),
   Code_in_block(EA_def, Block),
   Code_in_block(EA, Block).

Stack_def_use_def_used(EA_def, VarDefr, VarDefp, Next_EA_used, VarUsedr, VarUsedp) :- 
   Stack_def_use_live_var_at_prior_used(EA_used, NextUsedBlock, Varr, Varp),
   Stack_def_use_live_var_used(NextUsedBlock, Varr, Varp, VarUsedr, VarUsedp, Next_EA_used, _, _),
   Stack_def_use_def_used(EA_def, VarDefr, VarDefp, EA_used, Varr, Varp).

Stack_def_use_live_var_at_block_end(PrevBlock, BlockUsed, inlined_BaseReg_374, inlined_StackPos_374) :- 
   Stack_def_use_live_var_at_block_end(Block, BlockUsed, inlined_BaseReg_374, inlined_StackPos_374),
   not Stack_def_use_ref_in_block(Block, inlined_BaseReg_374, inlined_StackPos_374),
   not Reg_def_use_defined_in_block(Block, inlined_BaseReg_374),
   Block_next(PrevBlock, _, Block).

Stack_def_use_live_var_at_block_end(PrevBlock, Block, Varr, Varp) :- 
   Block_next(PrevBlock, _, Block),
   Stack_def_use_live_var_used(Block, Varr, Varp, _, _, _, _, _).

Stack_def_use_live_var_at_prior_used(EA_used, BlockUsed, inlined_BaseReg_375, inlined_StackPos_375) :- 
   Stack_def_use_live_var_at_block_end(Block, BlockUsed, inlined_BaseReg_375, inlined_StackPos_375),
   Stack_def_use_used_in_block(Block, EA_used, inlined_BaseReg_375, inlined_StackPos_375, _),
   not Reg_def_use_defined_in_block(Block, inlined_BaseReg_375),
   not Stack_def_use_defined_in_block(Block, inlined_BaseReg_375, inlined_StackPos_375).

RelationSizes("Stack_def_use_def_used", count_distinct(x)) :- Stack_def_use_def_used(x, _, _, _, _, _).
RelationSizes("Reg_def_use_return_val_used", count_distinct(x)) :- Reg_def_use_return_val_used(x, _, _, _, _).
RelationSizes("Reg_def_use_live_var_used", count_distinct(x)) :- Reg_def_use_live_var_used(x, _, _, _).
RelationSizes("Jump_table_target", count_distinct(x)) :- Jump_table_target(x, _).
RelationSizes("Reg_def_use_def_used", count_distinct(x)) :- Reg_def_use_def_used(x, _, _, _).
RelationSizes("Reg_def_use_live_var_at_prior_used", count_distinct(x)) :- Reg_def_use_live_var_at_prior_used(x, _, _).
RelationSizes("Reg_def_use_live_var_at_block_end", count_distinct(x)) :- Reg_def_use_live_var_at_block_end(x, _, _).
RelationSizes("Reg_reg_arithmetic_operation_defs", count_distinct(x)) :- Reg_reg_arithmetic_operation_defs(x, _, _, _, _, _, _, _).
RelationSizes("Def_used_for_address", count_distinct(x)) :- Def_used_for_address(x, _, _).
RelationSizes("Stack_def_use_live_var_at_block_end", count_distinct(x)) :- Stack_def_use_live_var_at_block_end(x, _, _, _).
RelationSizes("Stack_def_use_live_var_at_prior_used", count_distinct(x)) :- Stack_def_use_live_var_at_prior_used(x, _, _, _).