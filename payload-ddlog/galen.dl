typedef number = signed<32> 

input relation P(x: number, z: number)
input relation Q(x: number, y: number, z: number)
input relation R(r: number, p: number, e: number)
input relation C(y: number, z: number, w: number)
input relation U(r: number, z: number, w: number)
input relation S(r: number, p: number)

output relation OutP(x: number, z: number)
output relation OutQ(x: number, y: number, z: number)

OutP(x,z) :- P(x,z).
OutQ(x,r,z) :- Q(x,r,z).

OutP(x,z) :- OutP(x,y), OutP(y,z).
OutQ(x,r,z) :- OutP(x,y), OutQ(y,r,z).
OutP(x,z) :- OutP(y,w), U(w,r,z), OutQ(x,r,y).
OutP(x,z) :- C(y,w,z),OutP(x,w), OutP(x,y).
OutQ(x,q,z) :- OutQ(x,r,z),S(r,q).
OutQ(x,e,o) :- OutQ(x,y,z),R(y,u,e),OutQ(z,u,o).


output relation RelationSizes(rel: string, size: bit<64>)
RelationSizes("OutP", size) :- OutP(x, y),  var size = (x, y).group_by(()).count_distinct().
RelationSizes("OutQ", size) :- OutQ(x, y, z),  var size = (x, y, z).group_by(()).count_distinct().